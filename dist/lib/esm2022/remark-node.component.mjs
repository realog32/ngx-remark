import { ChangeDetectionStrategy, Component, Input } from "@angular/core";
import * as i0 from "@angular/core";
import * as i1 from "./remark-templates.service";
import * as i2 from "@angular/common";
export class RemarkNodeComponent {
    constructor(templateService) {
        this.templateService = templateService;
    }
    get templates() {
        return this.templateService.templates;
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "17.3.7", ngImport: i0, type: RemarkNodeComponent, deps: [{ token: i1.RemarkTemplatesService }], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "17.3.7", type: RemarkNodeComponent, selector: "remark-node, [remarkNode]", inputs: { node: ["remarkNode", "node"] }, ngImport: i0, template: "\n<!-- For each child, display its custom template or default one -->\n<ng-container *ngFor=\"let child of node.children\">\n  <ng-container *ngTemplateOutlet=\"templates?.[child.type] ?? defaultTpl; context: { $implicit: child }\">\n  </ng-container>\n</ng-container>\n\n<ng-template #defaultTpl let-child>\n\n  <ng-container [ngSwitch]=\"child.type\">\n\n    <!-- Parents -->\n\n    <p *ngSwitchCase=\"'paragraph'\" [remarkNode]=\"child\"></p>\n\n    <ng-container *ngSwitchCase=\"'heading'\" [ngSwitch]=\"child.depth\">\n      <h1 *ngSwitchCase=\"1\" [remarkNode]=\"child\"></h1>\n      <h2 *ngSwitchCase=\"2\" [remarkNode]=\"child\"></h2>\n      <h3 *ngSwitchCase=\"3\" [remarkNode]=\"child\"></h3>\n      <h4 *ngSwitchCase=\"4\" [remarkNode]=\"child\"></h4>\n      <h5 *ngSwitchCase=\"5\" [remarkNode]=\"child\"></h5>\n      <h6 *ngSwitchCase=\"6\" [remarkNode]=\"child\"></h6>\n    </ng-container>\n\n    <blockquote *ngSwitchCase=\"'blockquote'\" [remarkNode]=\"child\"></blockquote>\n\n    <ng-container *ngSwitchCase=\"'list'\">\n      <ul *ngIf=\"!child.ordered\" [remarkNode]=\"child\"></ul>\n      <ol *ngIf=\"child.ordered\" [remarkNode]=\"child\" [start]=\"child.start\"></ol>\n    </ng-container>\n\n    <li *ngSwitchCase=\"'listItem'\" [remarkNode]=\"child\"></li>\n\n    <a *ngSwitchCase=\"'link'\" [href]=\"child.url\" [title]=\"child.title ?? ''\" [remarkNode]=\"child\"></a>\n\n    <em *ngSwitchCase=\"'emphasis'\" [remarkNode]=\"child\"></em>\n\n    <strong *ngSwitchCase=\"'strong'\" [remarkNode]=\"child\"></strong>\n\n    <del *ngSwitchCase=\"'delete'\" [remarkNode]=\"child\"></del>\n\n    <section *ngSwitchCase=\"'footnotes'\" class=\"footnotes\" [remarkNode]=\"child\"></section>\n\n    <table *ngSwitchCase=\"'table'\" [remarkNode]=\"child\"></table>\n\n    <tr *ngSwitchCase=\"'tableRow'\" [remarkNode]=\"child\"></tr>\n\n    <td *ngSwitchCase=\"'tableCell'\" [remarkNode]=\"child\"></td>\n\n\n    <!-- Literals -->\n\n    <code *ngSwitchCase=\"'inlineCode'\">{{ child.value }}</code>\n\n    <pre *ngSwitchCase=\"'code'\" [ngClass]=\"child.lang\"><code>{{ child.value }}</code></pre>\n\n    <div *ngSwitchCase=\"'html'\" [innerHTML]=\"child.value\"></div>\n\n    <ng-container *ngSwitchCase=\"'text'\">{{ child.value }}</ng-container>\n\n    <!-- Nodes -->\n\n    <sup *ngSwitchCase=\"'footnoteReference'\" class=\"footnote-ref\"><a [href]=\"'#'+child.identifier\">{{child.label}}</a></sup>\n\n    <img *ngSwitchCase=\"'image'\" [src]=\"child.url\" [alt]=\"child.alt ?? ''\" [title]=\"child.title ?? ''\" />\n\n    <hr *ngSwitchCase=\"'thematicBreak'\" />\n\n    <br *ngSwitchCase=\"'break'\">\n\n    <b *ngSwitchDefault>Unknown node type: {{ child.type }}</b>\n\n  </ng-container>\n</ng-template>\n", dependencies: [{ kind: "directive", type: i2.NgClass, selector: "[ngClass]", inputs: ["class", "ngClass"] }, { kind: "directive", type: i2.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { kind: "directive", type: i2.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "directive", type: i2.NgTemplateOutlet, selector: "[ngTemplateOutlet]", inputs: ["ngTemplateOutletContext", "ngTemplateOutlet", "ngTemplateOutletInjector"] }, { kind: "directive", type: i2.NgSwitch, selector: "[ngSwitch]", inputs: ["ngSwitch"] }, { kind: "directive", type: i2.NgSwitchCase, selector: "[ngSwitchCase]", inputs: ["ngSwitchCase"] }, { kind: "directive", type: i2.NgSwitchDefault, selector: "[ngSwitchDefault]" }, { kind: "component", type: RemarkNodeComponent, selector: "remark-node, [remarkNode]", inputs: ["remarkNode"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "17.3.7", ngImport: i0, type: RemarkNodeComponent, decorators: [{
            type: Component,
            args: [{ selector: "remark-node, [remarkNode]", changeDetection: ChangeDetectionStrategy.OnPush, template: "\n<!-- For each child, display its custom template or default one -->\n<ng-container *ngFor=\"let child of node.children\">\n  <ng-container *ngTemplateOutlet=\"templates?.[child.type] ?? defaultTpl; context: { $implicit: child }\">\n  </ng-container>\n</ng-container>\n\n<ng-template #defaultTpl let-child>\n\n  <ng-container [ngSwitch]=\"child.type\">\n\n    <!-- Parents -->\n\n    <p *ngSwitchCase=\"'paragraph'\" [remarkNode]=\"child\"></p>\n\n    <ng-container *ngSwitchCase=\"'heading'\" [ngSwitch]=\"child.depth\">\n      <h1 *ngSwitchCase=\"1\" [remarkNode]=\"child\"></h1>\n      <h2 *ngSwitchCase=\"2\" [remarkNode]=\"child\"></h2>\n      <h3 *ngSwitchCase=\"3\" [remarkNode]=\"child\"></h3>\n      <h4 *ngSwitchCase=\"4\" [remarkNode]=\"child\"></h4>\n      <h5 *ngSwitchCase=\"5\" [remarkNode]=\"child\"></h5>\n      <h6 *ngSwitchCase=\"6\" [remarkNode]=\"child\"></h6>\n    </ng-container>\n\n    <blockquote *ngSwitchCase=\"'blockquote'\" [remarkNode]=\"child\"></blockquote>\n\n    <ng-container *ngSwitchCase=\"'list'\">\n      <ul *ngIf=\"!child.ordered\" [remarkNode]=\"child\"></ul>\n      <ol *ngIf=\"child.ordered\" [remarkNode]=\"child\" [start]=\"child.start\"></ol>\n    </ng-container>\n\n    <li *ngSwitchCase=\"'listItem'\" [remarkNode]=\"child\"></li>\n\n    <a *ngSwitchCase=\"'link'\" [href]=\"child.url\" [title]=\"child.title ?? ''\" [remarkNode]=\"child\"></a>\n\n    <em *ngSwitchCase=\"'emphasis'\" [remarkNode]=\"child\"></em>\n\n    <strong *ngSwitchCase=\"'strong'\" [remarkNode]=\"child\"></strong>\n\n    <del *ngSwitchCase=\"'delete'\" [remarkNode]=\"child\"></del>\n\n    <section *ngSwitchCase=\"'footnotes'\" class=\"footnotes\" [remarkNode]=\"child\"></section>\n\n    <table *ngSwitchCase=\"'table'\" [remarkNode]=\"child\"></table>\n\n    <tr *ngSwitchCase=\"'tableRow'\" [remarkNode]=\"child\"></tr>\n\n    <td *ngSwitchCase=\"'tableCell'\" [remarkNode]=\"child\"></td>\n\n\n    <!-- Literals -->\n\n    <code *ngSwitchCase=\"'inlineCode'\">{{ child.value }}</code>\n\n    <pre *ngSwitchCase=\"'code'\" [ngClass]=\"child.lang\"><code>{{ child.value }}</code></pre>\n\n    <div *ngSwitchCase=\"'html'\" [innerHTML]=\"child.value\"></div>\n\n    <ng-container *ngSwitchCase=\"'text'\">{{ child.value }}</ng-container>\n\n    <!-- Nodes -->\n\n    <sup *ngSwitchCase=\"'footnoteReference'\" class=\"footnote-ref\"><a [href]=\"'#'+child.identifier\">{{child.label}}</a></sup>\n\n    <img *ngSwitchCase=\"'image'\" [src]=\"child.url\" [alt]=\"child.alt ?? ''\" [title]=\"child.title ?? ''\" />\n\n    <hr *ngSwitchCase=\"'thematicBreak'\" />\n\n    <br *ngSwitchCase=\"'break'\">\n\n    <b *ngSwitchDefault>Unknown node type: {{ child.type }}</b>\n\n  </ng-container>\n</ng-template>\n" }]
        }], ctorParameters: () => [{ type: i1.RemarkTemplatesService }], propDecorators: { node: [{
                type: Input,
                args: [{ required: true, alias: "remarkNode" }]
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicmVtYXJrLW5vZGUuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vcHJvamVjdHMvbGliL3NyYy9yZW1hcmstbm9kZS5jb21wb25lbnQudHMiLCIuLi8uLi8uLi9wcm9qZWN0cy9saWIvc3JjL3JlbWFyay1ub2RlLmNvbXBvbmVudC5odG1sIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSx1QkFBdUIsRUFBRSxTQUFTLEVBQUUsS0FBSyxFQUFFLE1BQU0sZUFBZSxDQUFDOzs7O0FBUTFFLE1BQU0sT0FBTyxtQkFBbUI7SUFHOUIsWUFDUyxlQUF1QztRQUF2QyxvQkFBZSxHQUFmLGVBQWUsQ0FBd0I7SUFDN0MsQ0FBQztJQUVKLElBQUksU0FBUztRQUNYLE9BQU8sSUFBSSxDQUFDLGVBQWUsQ0FBQyxTQUFTLENBQUM7SUFDeEMsQ0FBQzs4R0FUVSxtQkFBbUI7a0dBQW5CLG1CQUFtQiwyR0NSaEMsMnFGQTBFQSw4eEJEbEVhLG1CQUFtQjs7MkZBQW5CLG1CQUFtQjtrQkFML0IsU0FBUzsrQkFDRSwyQkFBMkIsbUJBRXBCLHVCQUF1QixDQUFDLE1BQU07MkZBR0QsSUFBSTtzQkFBakQsS0FBSzt1QkFBQyxFQUFDLFFBQVEsRUFBRSxJQUFJLEVBQUUsS0FBSyxFQUFFLFlBQVksRUFBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENoYW5nZURldGVjdGlvblN0cmF0ZWd5LCBDb21wb25lbnQsIElucHV0IH0gZnJvbSBcIkBhbmd1bGFyL2NvcmVcIjtcbmltcG9ydCB7IFJlbWFya1RlbXBsYXRlc1NlcnZpY2UgfSBmcm9tIFwiLi9yZW1hcmstdGVtcGxhdGVzLnNlcnZpY2VcIjtcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiBcInJlbWFyay1ub2RlLCBbcmVtYXJrTm9kZV1cIixcbiAgdGVtcGxhdGVVcmw6IFwiLi9yZW1hcmstbm9kZS5jb21wb25lbnQuaHRtbFwiLFxuICBjaGFuZ2VEZXRlY3Rpb246IENoYW5nZURldGVjdGlvblN0cmF0ZWd5Lk9uUHVzaFxufSlcbmV4cG9ydCBjbGFzcyBSZW1hcmtOb2RlQ29tcG9uZW50IHtcbiAgQElucHV0KHtyZXF1aXJlZDogdHJ1ZSwgYWxpYXM6IFwicmVtYXJrTm9kZVwifSkgbm9kZTogYW55O1xuXG4gIGNvbnN0cnVjdG9yKFxuICAgIHB1YmxpYyB0ZW1wbGF0ZVNlcnZpY2U6IFJlbWFya1RlbXBsYXRlc1NlcnZpY2VcbiAgKSB7fVxuXG4gIGdldCB0ZW1wbGF0ZXMoKSB7XG4gICAgcmV0dXJuIHRoaXMudGVtcGxhdGVTZXJ2aWNlLnRlbXBsYXRlcztcbiAgfVxufVxuIiwiXG48IS0tIEZvciBlYWNoIGNoaWxkLCBkaXNwbGF5IGl0cyBjdXN0b20gdGVtcGxhdGUgb3IgZGVmYXVsdCBvbmUgLS0+XG48bmctY29udGFpbmVyICpuZ0Zvcj1cImxldCBjaGlsZCBvZiBub2RlLmNoaWxkcmVuXCI+XG4gIDxuZy1jb250YWluZXIgKm5nVGVtcGxhdGVPdXRsZXQ9XCJ0ZW1wbGF0ZXM/LltjaGlsZC50eXBlXSA/PyBkZWZhdWx0VHBsOyBjb250ZXh0OiB7ICRpbXBsaWNpdDogY2hpbGQgfVwiPlxuICA8L25nLWNvbnRhaW5lcj5cbjwvbmctY29udGFpbmVyPlxuXG48bmctdGVtcGxhdGUgI2RlZmF1bHRUcGwgbGV0LWNoaWxkPlxuXG4gIDxuZy1jb250YWluZXIgW25nU3dpdGNoXT1cImNoaWxkLnR5cGVcIj5cblxuICAgIDwhLS0gUGFyZW50cyAtLT5cblxuICAgIDxwICpuZ1N3aXRjaENhc2U9XCIncGFyYWdyYXBoJ1wiIFtyZW1hcmtOb2RlXT1cImNoaWxkXCI+PC9wPlxuXG4gICAgPG5nLWNvbnRhaW5lciAqbmdTd2l0Y2hDYXNlPVwiJ2hlYWRpbmcnXCIgW25nU3dpdGNoXT1cImNoaWxkLmRlcHRoXCI+XG4gICAgICA8aDEgKm5nU3dpdGNoQ2FzZT1cIjFcIiBbcmVtYXJrTm9kZV09XCJjaGlsZFwiPjwvaDE+XG4gICAgICA8aDIgKm5nU3dpdGNoQ2FzZT1cIjJcIiBbcmVtYXJrTm9kZV09XCJjaGlsZFwiPjwvaDI+XG4gICAgICA8aDMgKm5nU3dpdGNoQ2FzZT1cIjNcIiBbcmVtYXJrTm9kZV09XCJjaGlsZFwiPjwvaDM+XG4gICAgICA8aDQgKm5nU3dpdGNoQ2FzZT1cIjRcIiBbcmVtYXJrTm9kZV09XCJjaGlsZFwiPjwvaDQ+XG4gICAgICA8aDUgKm5nU3dpdGNoQ2FzZT1cIjVcIiBbcmVtYXJrTm9kZV09XCJjaGlsZFwiPjwvaDU+XG4gICAgICA8aDYgKm5nU3dpdGNoQ2FzZT1cIjZcIiBbcmVtYXJrTm9kZV09XCJjaGlsZFwiPjwvaDY+XG4gICAgPC9uZy1jb250YWluZXI+XG5cbiAgICA8YmxvY2txdW90ZSAqbmdTd2l0Y2hDYXNlPVwiJ2Jsb2NrcXVvdGUnXCIgW3JlbWFya05vZGVdPVwiY2hpbGRcIj48L2Jsb2NrcXVvdGU+XG5cbiAgICA8bmctY29udGFpbmVyICpuZ1N3aXRjaENhc2U9XCInbGlzdCdcIj5cbiAgICAgIDx1bCAqbmdJZj1cIiFjaGlsZC5vcmRlcmVkXCIgW3JlbWFya05vZGVdPVwiY2hpbGRcIj48L3VsPlxuICAgICAgPG9sICpuZ0lmPVwiY2hpbGQub3JkZXJlZFwiIFtyZW1hcmtOb2RlXT1cImNoaWxkXCIgW3N0YXJ0XT1cImNoaWxkLnN0YXJ0XCI+PC9vbD5cbiAgICA8L25nLWNvbnRhaW5lcj5cblxuICAgIDxsaSAqbmdTd2l0Y2hDYXNlPVwiJ2xpc3RJdGVtJ1wiIFtyZW1hcmtOb2RlXT1cImNoaWxkXCI+PC9saT5cblxuICAgIDxhICpuZ1N3aXRjaENhc2U9XCInbGluaydcIiBbaHJlZl09XCJjaGlsZC51cmxcIiBbdGl0bGVdPVwiY2hpbGQudGl0bGUgPz8gJydcIiBbcmVtYXJrTm9kZV09XCJjaGlsZFwiPjwvYT5cblxuICAgIDxlbSAqbmdTd2l0Y2hDYXNlPVwiJ2VtcGhhc2lzJ1wiIFtyZW1hcmtOb2RlXT1cImNoaWxkXCI+PC9lbT5cblxuICAgIDxzdHJvbmcgKm5nU3dpdGNoQ2FzZT1cIidzdHJvbmcnXCIgW3JlbWFya05vZGVdPVwiY2hpbGRcIj48L3N0cm9uZz5cblxuICAgIDxkZWwgKm5nU3dpdGNoQ2FzZT1cIidkZWxldGUnXCIgW3JlbWFya05vZGVdPVwiY2hpbGRcIj48L2RlbD5cblxuICAgIDxzZWN0aW9uICpuZ1N3aXRjaENhc2U9XCInZm9vdG5vdGVzJ1wiIGNsYXNzPVwiZm9vdG5vdGVzXCIgW3JlbWFya05vZGVdPVwiY2hpbGRcIj48L3NlY3Rpb24+XG5cbiAgICA8dGFibGUgKm5nU3dpdGNoQ2FzZT1cIid0YWJsZSdcIiBbcmVtYXJrTm9kZV09XCJjaGlsZFwiPjwvdGFibGU+XG5cbiAgICA8dHIgKm5nU3dpdGNoQ2FzZT1cIid0YWJsZVJvdydcIiBbcmVtYXJrTm9kZV09XCJjaGlsZFwiPjwvdHI+XG5cbiAgICA8dGQgKm5nU3dpdGNoQ2FzZT1cIid0YWJsZUNlbGwnXCIgW3JlbWFya05vZGVdPVwiY2hpbGRcIj48L3RkPlxuXG5cbiAgICA8IS0tIExpdGVyYWxzIC0tPlxuXG4gICAgPGNvZGUgKm5nU3dpdGNoQ2FzZT1cIidpbmxpbmVDb2RlJ1wiPnt7IGNoaWxkLnZhbHVlIH19PC9jb2RlPlxuXG4gICAgPHByZSAqbmdTd2l0Y2hDYXNlPVwiJ2NvZGUnXCIgW25nQ2xhc3NdPVwiY2hpbGQubGFuZ1wiPjxjb2RlPnt7IGNoaWxkLnZhbHVlIH19PC9jb2RlPjwvcHJlPlxuXG4gICAgPGRpdiAqbmdTd2l0Y2hDYXNlPVwiJ2h0bWwnXCIgW2lubmVySFRNTF09XCJjaGlsZC52YWx1ZVwiPjwvZGl2PlxuXG4gICAgPG5nLWNvbnRhaW5lciAqbmdTd2l0Y2hDYXNlPVwiJ3RleHQnXCI+e3sgY2hpbGQudmFsdWUgfX08L25nLWNvbnRhaW5lcj5cblxuICAgIDwhLS0gTm9kZXMgLS0+XG5cbiAgICA8c3VwICpuZ1N3aXRjaENhc2U9XCInZm9vdG5vdGVSZWZlcmVuY2UnXCIgY2xhc3M9XCJmb290bm90ZS1yZWZcIj48YSBbaHJlZl09XCInIycrY2hpbGQuaWRlbnRpZmllclwiPnt7Y2hpbGQubGFiZWx9fTwvYT48L3N1cD5cblxuICAgIDxpbWcgKm5nU3dpdGNoQ2FzZT1cIidpbWFnZSdcIiBbc3JjXT1cImNoaWxkLnVybFwiIFthbHRdPVwiY2hpbGQuYWx0ID8/ICcnXCIgW3RpdGxlXT1cImNoaWxkLnRpdGxlID8/ICcnXCIgLz5cblxuICAgIDxociAqbmdTd2l0Y2hDYXNlPVwiJ3RoZW1hdGljQnJlYWsnXCIgLz5cblxuICAgIDxiciAqbmdTd2l0Y2hDYXNlPVwiJ2JyZWFrJ1wiPlxuXG4gICAgPGIgKm5nU3dpdGNoRGVmYXVsdD5Vbmtub3duIG5vZGUgdHlwZToge3sgY2hpbGQudHlwZSB9fTwvYj5cblxuICA8L25nLWNvbnRhaW5lcj5cbjwvbmctdGVtcGxhdGU+XG4iXX0=