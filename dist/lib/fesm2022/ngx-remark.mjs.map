{"version":3,"file":"ngx-remark.mjs","sources":["../../../projects/lib/src/remark-template.directive.ts","../../../projects/lib/src/remark-templates.service.ts","../../../projects/lib/src/remark-node.component.ts","../../../projects/lib/src/remark-node.component.html","../../../projects/lib/src/remark.component.ts","../../../projects/lib/src/remark.module.ts","../../../projects/lib/src/public-api.ts","../../../projects/lib/src/ngx-remark.ts"],"sourcesContent":["import { Directive, Input, TemplateRef } from \"@angular/core\";\n\n@Directive({\n  selector: \"[remarkTemplate]\"\n})\nexport class RemarkTemplateDirective {\n  @Input({required: true, alias: \"remarkTemplate\"}) nodeType!: string;\n\n  constructor(\n    public readonly template: TemplateRef<any>\n  ) {}\n}\n","import { Injectable, TemplateRef } from \"@angular/core\";\n\n@Injectable()\nexport class RemarkTemplatesService {\n  templates: {[nodeType: string]: TemplateRef<any>} = {};\n}\n","import { ChangeDetectionStrategy, Component, Input } from \"@angular/core\";\nimport { RemarkTemplatesService } from \"./remark-templates.service\";\n\n@Component({\n  selector: \"remark-node, [remarkNode]\",\n  templateUrl: \"./remark-node.component.html\",\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class RemarkNodeComponent {\n  @Input({required: true, alias: \"remarkNode\"}) node: any;\n\n  constructor(\n    public templateService: RemarkTemplatesService\n  ) {}\n\n  get templates() {\n    return this.templateService.templates;\n  }\n}\n","\n<!-- For each child, display its custom template or default one -->\n<ng-container *ngFor=\"let child of node.children\">\n  <ng-container *ngTemplateOutlet=\"templates?.[child.type] ?? defaultTpl; context: { $implicit: child }\">\n  </ng-container>\n</ng-container>\n\n<ng-template #defaultTpl let-child>\n\n  <ng-container [ngSwitch]=\"child.type\">\n\n    <!-- Parents -->\n\n    <p *ngSwitchCase=\"'paragraph'\" [remarkNode]=\"child\"></p>\n\n    <ng-container *ngSwitchCase=\"'heading'\" [ngSwitch]=\"child.depth\">\n      <h1 *ngSwitchCase=\"1\" [remarkNode]=\"child\"></h1>\n      <h2 *ngSwitchCase=\"2\" [remarkNode]=\"child\"></h2>\n      <h3 *ngSwitchCase=\"3\" [remarkNode]=\"child\"></h3>\n      <h4 *ngSwitchCase=\"4\" [remarkNode]=\"child\"></h4>\n      <h5 *ngSwitchCase=\"5\" [remarkNode]=\"child\"></h5>\n      <h6 *ngSwitchCase=\"6\" [remarkNode]=\"child\"></h6>\n    </ng-container>\n\n    <blockquote *ngSwitchCase=\"'blockquote'\" [remarkNode]=\"child\"></blockquote>\n\n    <ng-container *ngSwitchCase=\"'list'\">\n      <ul *ngIf=\"!child.ordered\" [remarkNode]=\"child\"></ul>\n      <ol *ngIf=\"child.ordered\" [remarkNode]=\"child\" [start]=\"child.start\"></ol>\n    </ng-container>\n\n    <li *ngSwitchCase=\"'listItem'\" [remarkNode]=\"child\"></li>\n\n    <a *ngSwitchCase=\"'link'\" [href]=\"child.url\" [title]=\"child.title ?? ''\" [remarkNode]=\"child\"></a>\n\n    <em *ngSwitchCase=\"'emphasis'\" [remarkNode]=\"child\"></em>\n\n    <strong *ngSwitchCase=\"'strong'\" [remarkNode]=\"child\"></strong>\n\n    <del *ngSwitchCase=\"'delete'\" [remarkNode]=\"child\"></del>\n\n    <section *ngSwitchCase=\"'footnotes'\" class=\"footnotes\" [remarkNode]=\"child\"></section>\n\n    <table *ngSwitchCase=\"'table'\" [remarkNode]=\"child\"></table>\n\n    <tr *ngSwitchCase=\"'tableRow'\" [remarkNode]=\"child\"></tr>\n\n    <td *ngSwitchCase=\"'tableCell'\" [remarkNode]=\"child\"></td>\n\n\n    <!-- Literals -->\n\n    <code *ngSwitchCase=\"'inlineCode'\">{{ child.value }}</code>\n\n    <pre *ngSwitchCase=\"'code'\" [ngClass]=\"child.lang\"><code>{{ child.value }}</code></pre>\n\n    <div *ngSwitchCase=\"'html'\" [innerHTML]=\"child.value\"></div>\n\n    <ng-container *ngSwitchCase=\"'text'\">{{ child.value }}</ng-container>\n\n    <!-- Nodes -->\n\n    <sup *ngSwitchCase=\"'footnoteReference'\" class=\"footnote-ref\"><a [href]=\"'#'+child.identifier\">{{child.label}}</a></sup>\n\n    <img *ngSwitchCase=\"'image'\" [src]=\"child.url\" [alt]=\"child.alt ?? ''\" [title]=\"child.title ?? ''\" />\n\n    <hr *ngSwitchCase=\"'thematicBreak'\" />\n\n    <br *ngSwitchCase=\"'break'\">\n\n    <b *ngSwitchDefault>Unknown node type: {{ child.type }}</b>\n\n  </ng-container>\n</ng-template>\n","import { AfterContentInit, ChangeDetectionStrategy, ChangeDetectorRef, Component, ContentChildren, Input, OnChanges, QueryList, TemplateRef } from '@angular/core';\nimport { RemarkTemplateDirective } from './remark-template.directive';\nimport { RemarkTemplatesService } from './remark-templates.service';\nimport { unified, Processor } from 'unified';\nimport remarkParse from 'remark-parse';\nimport { Root, Node } from 'mdast';\n\n@Component({\n  selector: 'remark',\n  template: `\n    <remark-node *ngIf=\"tree && templates\" [remarkNode]=\"tree\"></remark-node>\n    <pre *ngIf=\"debug\"><code>{{tree | json }}</code></pre>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [RemarkTemplatesService]\n})\nexport class RemarkComponent implements OnChanges, AfterContentInit {\n  /** The markdown string to render */\n  @Input({required: true}) markdown!: string;\n  /** A custom processor to use instead of the default `unified().user(remarkParse)` */\n  @Input() processor?: Processor<Root>;\n  /** Set this flag to true to display the parsed markdown tree */\n  @Input() debug = false;\n\n  /** Custom templates to override the default rendering components */\n  @ContentChildren(RemarkTemplateDirective)\n  templateQuery?: QueryList<RemarkTemplateDirective>;\n\n  tree?: Node;\n\n  get templates() {\n    return this.remarkTemplatesService.templates;\n  }\n\n  set templates(value) {\n    this.remarkTemplatesService.templates = value;\n  }\n\n  constructor(\n    private remarkTemplatesService: RemarkTemplatesService,\n    private cdr: ChangeDetectorRef\n  ) { }\n\n  ngOnChanges() {\n    if(this.templates) {\n      this.parse();\n    }\n  }\n\n  ngAfterContentInit() {\n    this.templateQuery?.changes.subscribe(() => this.updateTemplates());\n    this.updateTemplates();\n  }\n\n  updateTemplates() {\n    this.templates = {};\n    this.templateQuery?.forEach(\n      template => this.templates![template.nodeType] = template.template\n    );\n    this.parse();\n  }\n\n  getProcessor() {\n    return this.processor ?? unified().use(remarkParse);\n  }\n\n  parse() {\n    const processor = this.getProcessor();\n    const tree = processor.parse(this.markdown);\n    this.tree = processor.runSync(tree);\n    this.cdr.markForCheck();\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { RemarkComponent } from './remark.component';\nimport { CommonModule } from '@angular/common';\nimport { RemarkTemplateDirective } from './remark-template.directive';\nimport { RemarkNodeComponent } from './remark-node.component';\n\n\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: [\n    RemarkComponent,\n    RemarkTemplateDirective,\n    RemarkNodeComponent\n  ],\n  exports: [\n    RemarkComponent,\n    RemarkTemplateDirective,\n    RemarkNodeComponent\n  ]\n})\nexport class RemarkModule { }\n","/*\n * Public API Surface of lib\n */\n\nexport * from './remark.module';\nexport * from './remark.component';\nexport * from './remark-template.directive';\nexport * from './remark-node.component';\nexport * from './remark-templates.service';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["i1.RemarkTemplatesService","i3.RemarkNodeComponent"],"mappings":"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"}